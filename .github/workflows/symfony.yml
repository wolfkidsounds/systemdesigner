# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Symfony

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mariadb:11.1.2
        env:
          MYSQL_ROOT_PASSWORD: symfony
          MYSQL_DATABASE: app
        ports:
          - 3306:3306
    steps:
    - uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
      with:
        php-version: '8.1'
    - uses: actions/checkout@v3
    - name: Copy .env.test.local
      run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"
    - name: Create Test Database
      run: |
        mysql -u root -psymfony -e "CREATE DATABASE IF NOT EXISTS app_test;"
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DATABASE_URL: mysql://root:symfony@127.0.0.1:3306/app?serverVersion=11.1.2-MariaDB&charset=utf8mb4
      run: vendor/bin/phpunit
