name: Symfony

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
      with:
        php-version: '8.1'
    - uses: actions/checkout@v3

    - name: Copy .env.test
      run: php -r "file_exists('.env.test') || copy('.env.test', '.env.test.local');"

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Shutdown Ubuntu MySQL (SUDO)
      run: sudo service mysql stop # Shutdown the Default MySQL, "sudo" is necessary, please not remove it

    - name: Start MariaDB
      uses: getong/mariadb-action@v1.1
      with:
        mariadb version: '11.1.2' # Optional, default value is "latest". The version of the MariaDB
        mysql database: 'app_test' # Optional, default value is "test". The specified database which will be create
        mysql root password: symfony # Required if "mysql user" is empty, default is empty. The root superuser password
        mysql user: 'symfony' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
        mysql password: symfony # Required if "mysql user" exists. The password for the "mysql user"

    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Determine Symfony Project Path
      id: project-path
      run: echo "::set-output name=path::$(pwd)/path/to/your/symfony/project"

    - name: Make bin/console executable
      run: chmod +x ${{ steps.project-path.outputs.path }}/bin/console

    - name: Create Test Database
      run: ${{ steps.project-path.outputs.path }}/bin/console doctrine:database:create --env=test

    - name: Create Test Schema
      run: ${{ steps.project-path.outputs.path }}/bin/console doctrine:schema:create --env=test

    - name: Run PHPUnit Tests
      run: ${{ steps.project-path.outputs.path }}/vendor/bin/phpunit